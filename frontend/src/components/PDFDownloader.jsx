import React from 'react';
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import GradientButton from './GradientButton';

const PDFDownloader = ({ content, filename = 'as400-modernization-report' }) => {
  const generatePDF = async () => {
    try {
      // Create a temporary div with the content
      const tempDiv = document.createElement('div');
      tempDiv.style.position = 'absolute';
      tempDiv.style.left = '-9999px';
      tempDiv.style.top = '-9999px';
      tempDiv.style.width = '800px';
      tempDiv.style.padding = '20px';
      tempDiv.style.backgroundColor = '#111111';
      tempDiv.style.color = '#CCCCCC';
      tempDiv.style.fontFamily = 'Arial, sans-serif';

      tempDiv.innerHTML = `
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #FFD700; font-size: 28px; margin-bottom: 10px;">
            ðŸš€ AS/400 Modernization Report
          </h1>
          <p style="color: #FF8C00; font-size: 14px;">
            Generated by AI-Powered Modernization Platform
          </p>
          <hr style="border: 1px solid #FFD700; margin: 20px 0;">
        </div>

        <div style="margin-bottom: 20px;">
          <h2 style="color: #FFD700; font-size: 20px; margin-bottom: 15px;">
            ðŸ“Š Analysis Summary
          </h2>
          <div style="background: rgba(255, 215, 0, 0.1); padding: 15px; border-radius: 8px; border-left: 4px solid #FFD700;">
            ${content || 'No analysis content available. Please ensure you have submitted a query for AI processing.'}
          </div>
        </div>

        <div style="margin-bottom: 20px;">
          <h2 style="color: #FFD700; font-size: 20px; margin-bottom: 15px;">
            ðŸ”§ Modernization Recommendations
          </h2>
          <ul style="color: #CCCCCC; line-height: 1.6;">
            <li>Implement microservices architecture for better scalability</li>
            <li>Migrate to cloud-native technologies (AWS, Azure, GCP)</li>
            <li>Adopt DevOps practices for continuous integration/deployment</li>
            <li>Implement modern API management solutions</li>
            <li>Establish comprehensive monitoring and observability</li>
          </ul>
        </div>

        <div style="margin-bottom: 20px;">
          <h2 style="color: #FFD700; font-size: 20px; margin-bottom: 15px;">
            ðŸ“ˆ Benefits Expected
          </h2>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
            <div style="background: rgba(255, 140, 0, 0.1); padding: 12px; border-radius: 6px;">
              <strong style="color: #FF8C00;">Performance</strong><br>
              Up to 300% improvement in system response times
            </div>
            <div style="background: rgba(255, 140, 0, 0.1); padding: 12px; border-radius: 6px;">
              <strong style="color: #FF8C00;">Cost Reduction</strong><br>
              40-60% reduction in maintenance costs
            </div>
            <div style="background: rgba(255, 140, 0, 0.1); padding: 12px; border-radius: 6px;">
              <strong style="color: #FF8C00;">Scalability</strong><br>
              Unlimited horizontal scaling capabilities
            </div>
            <div style="background: rgba(255, 140, 0, 0.1); padding: 12px; border-radius: 6px;">
              <strong style="color: #FF8C00;">Integration</strong><br>
              Seamless modern technology integration
            </div>
          </div>
        </div>

        <div style="margin-top: 30px; text-align: center; border-top: 1px solid #FFD700; padding-top: 20px;">
          <p style="color: #666; font-size: 12px;">
            Generated on ${new Date().toLocaleDateString()} by AS/400 Modernization Platform<br>
            Powered by Advanced AI Technology
          </p>
        </div>
      `;

      document.body.appendChild(tempDiv);

      // Convert to canvas
      const canvas = await html2canvas(tempDiv, {
        backgroundColor: '#111111',
        scale: 2,
        useCORS: true,
        allowTaint: true
      });

      // Remove temporary div
      document.body.removeChild(tempDiv);

      // Create PDF
      const imgData = canvas.toDataURL('image/png');
      const pdf = new jsPDF('p', 'mm', 'a4');
      const imgWidth = 210;
      const pageHeight = 295;
      const imgHeight = (canvas.height * imgWidth) / canvas.width;
      let heightLeft = imgHeight;
      let position = 0;

      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
      heightLeft -= pageHeight;

      while (heightLeft >= 0) {
        position = heightLeft - imgHeight;
        pdf.addPage();
        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
        heightLeft -= pageHeight;
      }

      // Save the PDF
      pdf.save(`${filename}-${Date.now()}.pdf`);

    } catch (error) {
      console.error('Error generating PDF:', error);
      alert('Error generating PDF. Please try again.');
    }
  };

  return (
    <GradientButton
      onClick={generatePDF}
      size="medium"
      style={{
        display: 'flex',
        alignItems: 'center',
        gap: '8px'
      }}
    >
      ðŸ“„ Download PDF Report
    </GradientButton>
  );
};

export default PDFDownloader;